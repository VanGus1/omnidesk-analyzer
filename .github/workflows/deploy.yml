name: Deploy to Ubuntu Server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      OMNIDESK_USERNAME: ${{ secrets.OMNIDESK_USERNAME }}
      OMNIDESK_PASSWORD: ${{ secrets.OMNIDESK_PASSWORD }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GOOGLE_SERVICE_ACCOUNT_FILE: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_FILE }}
      GOOGLE_SCOPES: ${{ secrets.GOOGLE_SCOPES }}
      GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      GOOGLE_PRIVATE_KEY_ID: ${{ secrets.GOOGLE_PRIVATE_KEY_ID }}
      GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
      GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_AUTH_URI: ${{ secrets.GOOGLE_AUTH_URI }}
      GOOGLE_TOKEN_URI: ${{ secrets.GOOGLE_TOKEN_URI }}
      GOOGLE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.GOOGLE_AUTH_PROVIDER_X509_CERT_URL }}
      GOOGLE_CLIENT_X509_CERT_URL: ${{ secrets.GOOGLE_CLIENT_X509_CERT_URL }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Ubuntu Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        envs: |
          OMNIDESK_USERNAME
          OMNIDESK_PASSWORD
          OPENAI_API_KEY
          GOOGLE_SERVICE_ACCOUNT_FILE
          GOOGLE_SCOPES
          GOOGLE_PROJECT_ID
          GOOGLE_PRIVATE_KEY_ID
          GOOGLE_PRIVATE_KEY
          GOOGLE_CLIENT_EMAIL
          GOOGLE_CLIENT_ID
          GOOGLE_AUTH_URI
          GOOGLE_TOKEN_URI
          GOOGLE_AUTH_PROVIDER_X509_CERT_URL
          GOOGLE_CLIENT_X509_CERT_URL
        script: |
          # Проверяем текущую директорию
          echo "Current directory:"
          pwd
          
          # Проверяем наличие директории
          echo "Checking directory existence:"
          ls -la /opt/omnidesk-analyzer
          
          # Останавливаем сервис
          echo "Stopping service..."
          sudo systemctl stop omnidesk-analyzer
          
          # Проверяем текущий код
          echo "Current main.py content:"
          cat /opt/omnidesk-analyzer/main.py
          
          # Сохраняем .env файл
          echo "Backing up .env..."
          if [ -f /opt/omnidesk-analyzer/.env ]; then
            sudo cp /opt/omnidesk-analyzer/.env /tmp/omnidesk.env.backup
          fi
          
          # Сохраняем виртуальное окружение
          echo "Backing up venv..."
          if [ -d /opt/omnidesk-analyzer/venv ]; then
            sudo cp -r /opt/omnidesk-analyzer/venv /tmp/omnidesk.venv.backup
          fi
          
          # Удаляем старую директорию
          echo "Removing old directory..."
          sudo rm -rf /opt/omnidesk-analyzer
          
          # Проверяем, что директория удалена
          echo "Checking directory after removal:"
          ls -la /opt/omnidesk-analyzer || echo "Directory successfully removed"
          
          # Клонируем репозиторий заново
          echo "Cloning repository..."
          sudo git clone https://github.com/VanGus1/omnidesk-analyzer.git /opt/omnidesk-analyzer
          
          # Принудительно обновляем код
          cd /opt/omnidesk-analyzer
          echo "Fetching latest changes..."
          sudo git fetch origin main
          echo "Resetting to latest commit..."
          sudo git reset --hard origin/main
          
          # Проверяем склонированный код
          echo "New main.py content:"
          cat /opt/omnidesk-analyzer/main.py
          
          echo "main.py MD5 hash:"
          md5sum /opt/omnidesk-analyzer/main.py
          
          echo "main.py first 10 lines:"
          head -n 10 /opt/omnidesk-analyzer/main.py
          
          # Проверяем ветку и коммит
          echo "Current branch:"
          git branch
          echo "Latest commit:"
          git log -1
          
          # Восстанавливаем виртуальное окружение
          echo "Restoring venv..."
          if [ -d /tmp/omnidesk.venv.backup ]; then
            sudo cp -r /tmp/omnidesk.venv.backup /opt/omnidesk-analyzer/venv
          else
            echo "Creating new venv..."
            cd /opt/omnidesk-analyzer
            python3 -m venv venv
          fi
          
          # Обновляем конфигурацию сервиса
          echo "Updating service configuration..."
          sudo tee /etc/systemd/system/omnidesk-analyzer.service << EOL
          [Unit]
          Description=OmniDesk Analyzer API
          After=network.target

          [Service]
          User=omnidesk
          Group=omnidesk
          WorkingDirectory=/opt/omnidesk-analyzer
          Environment=PYTHONPATH=/opt/omnidesk-analyzer
          EnvironmentFile=/opt/omnidesk-analyzer/.env
          ExecStart=/opt/omnidesk-analyzer/venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000
          Restart=always

          [Install]
          WantedBy=multi-user.target
          EOL
          
          # Перезагружаем конфигурацию systemd
          echo "Reloading systemd configuration..."
          sudo systemctl daemon-reload
          
          cd /opt/omnidesk-analyzer
          
          # Проверяем текущий коммит
          echo "Current commit hash:"
          git rev-parse HEAD
          
          # Обновляем зависимости
          echo "Updating dependencies..."
          source venv/bin/activate
          pip install -r requirements.txt
          
          # Создаем .env файл из секретов
          echo "Creating .env file..."
          cat > .env << EOL
          OMNIDESK_USERNAME=${{ secrets.OMNIDESK_USERNAME }}
          OMNIDESK_PASSWORD=${{ secrets.OMNIDESK_PASSWORD }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          GOOGLE_SCOPES=${{ secrets.GOOGLE_SCOPES }}
          GOOGLE_SERVICE_ACCOUNT_FILE=${{ secrets.GOOGLE_SERVICE_ACCOUNT_FILE }}
          GOOGLE_PROJECT_ID=${{ secrets.GOOGLE_PROJECT_ID }}
          GOOGLE_PRIVATE_KEY_ID=${{ secrets.GOOGLE_PRIVATE_KEY_ID }}
          GOOGLE_PRIVATE_KEY=${{ secrets.GOOGLE_PRIVATE_KEY }}
          GOOGLE_CLIENT_EMAIL=${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_AUTH_URI=${{ secrets.GOOGLE_AUTH_URI }}
          GOOGLE_TOKEN_URI=${{ secrets.GOOGLE_TOKEN_URI }}
          GOOGLE_AUTH_PROVIDER_X509_CERT_URL=${{ secrets.GOOGLE_AUTH_PROVIDER_X509_CERT_URL }}
          GOOGLE_CLIENT_X509_CERT_URL=${{ secrets.GOOGLE_CLIENT_X509_CERT_URL }}
          EOL
          
          # Устанавливаем правильные права доступа
          echo "Setting permissions..."
          sudo chown -R omnidesk:omnidesk .
          sudo chmod 600 .env
          
          # Проверяем содержимое utils.py
          echo "Checking utils.py content:"
          cat utils.py
          
          # Проверяем права доступа после обновления
          echo "Final permissions:"
          ls -la
          
          # Перезапускаем сервис
          echo "Restarting service..."
          sudo systemctl restart omnidesk-analyzer
          
          # Проверяем статус и логи
          echo "Service status:"
          sudo systemctl status omnidesk-analyzer
          
          echo "Service logs:"
          sudo journalctl -u omnidesk-analyzer -n 50 