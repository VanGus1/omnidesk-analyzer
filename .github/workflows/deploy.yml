name: Deploy to Ubuntu Server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      OMNIDESK_USERNAME: ${{ secrets.OMNIDESK_USERNAME }}
      OMNIDESK_PASSWORD: ${{ secrets.OMNIDESK_PASSWORD }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GOOGLE_SERVICE_ACCOUNT_FILE: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_FILE }}
      GOOGLE_SCOPES: ${{ secrets.GOOGLE_SCOPES }}
      GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      GOOGLE_PRIVATE_KEY_ID: ${{ secrets.GOOGLE_PRIVATE_KEY_ID }}
      GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
      GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_AUTH_URI: ${{ secrets.GOOGLE_AUTH_URI }}
      GOOGLE_TOKEN_URI: ${{ secrets.GOOGLE_TOKEN_URI }}
      GOOGLE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.GOOGLE_AUTH_PROVIDER_X509_CERT_URL }}
      GOOGLE_CLIENT_X509_CERT_URL: ${{ secrets.GOOGLE_CLIENT_X509_CERT_URL }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Ubuntu Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        envs: |
          OMNIDESK_USERNAME
          OMNIDESK_PASSWORD
          OPENAI_API_KEY
          GOOGLE_SERVICE_ACCOUNT_FILE
          GOOGLE_SCOPES
          GOOGLE_PROJECT_ID
          GOOGLE_PRIVATE_KEY_ID
          GOOGLE_PRIVATE_KEY
          GOOGLE_CLIENT_EMAIL
          GOOGLE_CLIENT_ID
          GOOGLE_AUTH_URI
          GOOGLE_TOKEN_URI
          GOOGLE_AUTH_PROVIDER_X509_CERT_URL
          GOOGLE_CLIENT_X509_CERT_URL
        script: |
          cd /opt/omnidesk-analyzer
          
          # Принудительно сбрасываем все локальные изменения
          git reset --hard HEAD
          git clean -fd
          
          # Получаем последние изменения
          git fetch origin main
          git reset --hard origin/main
          
          # Обновляем зависимости
          source venv/bin/activate
          pip install -r requirements.txt
          
          # Создаем .env файл из секретов
          cat > .env << EOL
          OMNIDESK_USERNAME=${{ secrets.OMNIDESK_USERNAME }}
          OMNIDESK_PASSWORD=${{ secrets.OMNIDESK_PASSWORD }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          GOOGLE_SCOPES=${{ secrets.GOOGLE_SCOPES }}
          GOOGLE_SERVICE_ACCOUNT_FILE=${{ secrets.GOOGLE_SERVICE_ACCOUNT_FILE }}
          GOOGLE_PROJECT_ID=${{ secrets.GOOGLE_PROJECT_ID }}
          GOOGLE_PRIVATE_KEY_ID=${{ secrets.GOOGLE_PRIVATE_KEY_ID }}
          GOOGLE_PRIVATE_KEY=${{ secrets.GOOGLE_PRIVATE_KEY }}
          GOOGLE_CLIENT_EMAIL=${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_AUTH_URI=${{ secrets.GOOGLE_AUTH_URI }}
          GOOGLE_TOKEN_URI=${{ secrets.GOOGLE_TOKEN_URI }}
          GOOGLE_AUTH_PROVIDER_X509_CERT_URL=${{ secrets.GOOGLE_AUTH_PROVIDER_X509_CERT_URL }}
          GOOGLE_CLIENT_X509_CERT_URL=${{ secrets.GOOGLE_CLIENT_X509_CERT_URL }}
          EOL
          
          # Устанавливаем правильные права доступа
          chown omnidesk:omnidesk .env
          chmod 600 .env
          
          # Перезапускаем сервис
          sudo systemctl restart omnidesk-analyzer
          
          # Проверяем статус и логи
          echo "Service status:"
          sudo systemctl status omnidesk-analyzer
          
          echo "Service logs:"
          sudo journalctl -u omnidesk-analyzer -n 50 